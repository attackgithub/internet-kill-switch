//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InternetKillSwitchApplication.KillSwitch {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NetworkAdapter", Namespace="http://schemas.datacontract.org/2004/07/ROOT.CIMV2.Win32")]
    [System.SerializableAttribute()]
    public partial class NetworkAdapter : System.ComponentModel.Component, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AutoCommitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NetConnectionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NetworkAddressesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InternetKillSwitchApplication.KillSwitch.ManagementPath PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InternetKillSwitchApplication.KillSwitch.NetworkAdapter.PowerManagementCapabilitiesValues[] PowerManagementCapabilitiesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InternetKillSwitchApplication.KillSwitch.ManagementScope ScopeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AutoCommit {
            get {
                return this.AutoCommitField;
            }
            set {
                if ((this.AutoCommitField.Equals(value) != true)) {
                    this.AutoCommitField = value;
                    this.RaisePropertyChanged("AutoCommit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NetConnectionID {
            get {
                return this.NetConnectionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NetConnectionIDField, value) != true)) {
                    this.NetConnectionIDField = value;
                    this.RaisePropertyChanged("NetConnectionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] NetworkAddresses {
            get {
                return this.NetworkAddressesField;
            }
            set {
                if ((object.ReferenceEquals(this.NetworkAddressesField, value) != true)) {
                    this.NetworkAddressesField = value;
                    this.RaisePropertyChanged("NetworkAddresses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InternetKillSwitchApplication.KillSwitch.ManagementPath Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InternetKillSwitchApplication.KillSwitch.NetworkAdapter.PowerManagementCapabilitiesValues[] PowerManagementCapabilities {
            get {
                return this.PowerManagementCapabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PowerManagementCapabilitiesField, value) != true)) {
                    this.PowerManagementCapabilitiesField = value;
                    this.RaisePropertyChanged("PowerManagementCapabilities");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InternetKillSwitchApplication.KillSwitch.ManagementScope Scope {
            get {
                return this.ScopeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScopeField, value) != true)) {
                    this.ScopeField = value;
                    this.RaisePropertyChanged("Scope");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
        [System.Runtime.Serialization.DataContractAttribute(Name="NetworkAdapter.PowerManagementCapabilitiesValues", Namespace="http://schemas.datacontract.org/2004/07/ROOT.CIMV2.Win32")]
        public enum PowerManagementCapabilitiesValues : int {
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Unknown0 = 0,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Not_Supported = 1,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Disabled = 2,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Enabled = 3,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Power_Saving_Modes_Entered_Automatically = 4,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Power_State_Settable = 5,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Power_Cycling_Supported = 6,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            Timed_Power_On_Supported = 7,
            
            [System.Runtime.Serialization.EnumMemberAttribute()]
            NULL_ENUM_VALUE = 8,
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagementPath", Namespace="http://schemas.datacontract.org/2004/07/System.Management")]
    [System.SerializableAttribute()]
    public partial class ManagementPath : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NamespacePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RelativePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClassName {
            get {
                return this.ClassNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassNameField, value) != true)) {
                    this.ClassNameField = value;
                    this.RaisePropertyChanged("ClassName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NamespacePath {
            get {
                return this.NamespacePathField;
            }
            set {
                if ((object.ReferenceEquals(this.NamespacePathField, value) != true)) {
                    this.NamespacePathField = value;
                    this.RaisePropertyChanged("NamespacePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelativePath {
            get {
                return this.RelativePathField;
            }
            set {
                if ((object.ReferenceEquals(this.RelativePathField, value) != true)) {
                    this.RelativePathField = value;
                    this.RaisePropertyChanged("RelativePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Server {
            get {
                return this.ServerField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerField, value) != true)) {
                    this.ServerField = value;
                    this.RaisePropertyChanged("Server");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagementScope", Namespace="http://schemas.datacontract.org/2004/07/System.Management")]
    [System.SerializableAttribute()]
    public partial class ManagementScope : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InternetKillSwitchApplication.KillSwitch.ConnectionOptions OptionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InternetKillSwitchApplication.KillSwitch.ManagementPath PathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InternetKillSwitchApplication.KillSwitch.ConnectionOptions Options {
            get {
                return this.OptionsField;
            }
            set {
                if ((object.ReferenceEquals(this.OptionsField, value) != true)) {
                    this.OptionsField = value;
                    this.RaisePropertyChanged("Options");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InternetKillSwitchApplication.KillSwitch.ManagementPath Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectionOptions", Namespace="http://schemas.datacontract.org/2004/07/System.Management")]
    [System.SerializableAttribute()]
    public partial class ConnectionOptions : InternetKillSwitchApplication.KillSwitch.ManagementOptions {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InternetKillSwitchApplication.KillSwitch.AuthenticationLevel AuthenticationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePrivilegesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private InternetKillSwitchApplication.KillSwitch.ImpersonationLevel ImpersonationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocaleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InternetKillSwitchApplication.KillSwitch.AuthenticationLevel Authentication {
            get {
                return this.AuthenticationField;
            }
            set {
                if ((this.AuthenticationField.Equals(value) != true)) {
                    this.AuthenticationField = value;
                    this.RaisePropertyChanged("Authentication");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Authority {
            get {
                return this.AuthorityField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorityField, value) != true)) {
                    this.AuthorityField = value;
                    this.RaisePropertyChanged("Authority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePrivileges {
            get {
                return this.EnablePrivilegesField;
            }
            set {
                if ((this.EnablePrivilegesField.Equals(value) != true)) {
                    this.EnablePrivilegesField = value;
                    this.RaisePropertyChanged("EnablePrivileges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public InternetKillSwitchApplication.KillSwitch.ImpersonationLevel Impersonation {
            get {
                return this.ImpersonationField;
            }
            set {
                if ((this.ImpersonationField.Equals(value) != true)) {
                    this.ImpersonationField = value;
                    this.RaisePropertyChanged("Impersonation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Locale {
            get {
                return this.LocaleField;
            }
            set {
                if ((object.ReferenceEquals(this.LocaleField, value) != true)) {
                    this.LocaleField = value;
                    this.RaisePropertyChanged("Locale");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ManagementOptions", Namespace="http://schemas.datacontract.org/2004/07/System.Management")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.ConnectionOptions))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.NetworkAdapter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.NetworkAdapter.PowerManagementCapabilitiesValues[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.NetworkAdapter.PowerManagementCapabilitiesValues))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.ComponentModel.Component))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.MarshalByRefObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.ManagementPath))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.ManagementScope))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.AuthenticationLevel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(InternetKillSwitchApplication.KillSwitch.ImpersonationLevel))]
    public partial class ManagementOptions : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object[] ContextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeoutField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object[] Context {
            get {
                return this.ContextField;
            }
            set {
                if ((object.ReferenceEquals(this.ContextField, value) != true)) {
                    this.ContextField = value;
                    this.RaisePropertyChanged("Context");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan Timeout {
            get {
                return this.TimeoutField;
            }
            set {
                if ((this.TimeoutField.Equals(value) != true)) {
                    this.TimeoutField = value;
                    this.RaisePropertyChanged("Timeout");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthenticationLevel", Namespace="http://schemas.datacontract.org/2004/07/System.Management")]
    public enum AuthenticationLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Connect = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Call = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Packet = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PacketIntegrity = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PacketPrivacy = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = -1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ImpersonationLevel", Namespace="http://schemas.datacontract.org/2004/07/System.Management")]
    public enum ImpersonationLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Anonymous = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Identify = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Impersonate = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Delegate = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="KillSwitch.IKillSwitchService")]
    public interface IKillSwitchService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/NetworkChangeOnNetworkAvailabilityChanged", ReplyAction="http://tempuri.org/IKillSwitchService/NetworkChangeOnNetworkAvailabilityChangedRe" +
            "sponse")]
        void NetworkChangeOnNetworkAvailabilityChanged();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/GetNetworkAdapters", ReplyAction="http://tempuri.org/IKillSwitchService/GetNetworkAdaptersResponse")]
        InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] GetNetworkAdapters();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/DisableNetworkAdapter", ReplyAction="http://tempuri.org/IKillSwitchService/DisableNetworkAdapterResponse")]
        bool DisableNetworkAdapter(InternetKillSwitchApplication.KillSwitch.NetworkAdapter o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/EnableNetworkAdapter", ReplyAction="http://tempuri.org/IKillSwitchService/EnableNetworkAdapterResponse")]
        bool EnableNetworkAdapter(InternetKillSwitchApplication.KillSwitch.NetworkAdapter o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/TryGetNetworkAdapterName", ReplyAction="http://tempuri.org/IKillSwitchService/TryGetNetworkAdapterNameResponse")]
        bool TryGetNetworkAdapterName(out string name, InternetKillSwitchApplication.KillSwitch.NetworkAdapter o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/GetIpAddress", ReplyAction="http://tempuri.org/IKillSwitchService/GetIpAddressResponse")]
        string GetIpAddress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/EnableAllLocal", ReplyAction="http://tempuri.org/IKillSwitchService/EnableAllLocalResponse")]
        void EnableAllLocal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/EnableAllVpn", ReplyAction="http://tempuri.org/IKillSwitchService/EnableAllVpnResponse")]
        void EnableAllVpn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/DisableAllLocal", ReplyAction="http://tempuri.org/IKillSwitchService/DisableAllLocalResponse")]
        void DisableAllLocal();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/DisableAllVpn", ReplyAction="http://tempuri.org/IKillSwitchService/DisableAllVpnResponse")]
        void DisableAllVpn();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/AddVpnAdapters", ReplyAction="http://tempuri.org/IKillSwitchService/AddVpnAdaptersResponse")]
        void AddVpnAdapters(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] adapters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/AddLocalAdapters", ReplyAction="http://tempuri.org/IKillSwitchService/AddLocalAdaptersResponse")]
        void AddLocalAdapters(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] adapters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/RemoveVpnAdapters", ReplyAction="http://tempuri.org/IKillSwitchService/RemoveVpnAdaptersResponse")]
        void RemoveVpnAdapters(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] adapters);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IKillSwitchService/RemoveLocalAdapters", ReplyAction="http://tempuri.org/IKillSwitchService/RemoveLocalAdaptersResponse")]
        void RemoveLocalAdapters(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] adapters);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IKillSwitchServiceChannel : InternetKillSwitchApplication.KillSwitch.IKillSwitchService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KillSwitchServiceClient : System.ServiceModel.ClientBase<InternetKillSwitchApplication.KillSwitch.IKillSwitchService>, InternetKillSwitchApplication.KillSwitch.IKillSwitchService {
        
        public KillSwitchServiceClient() {
        }
        
        public KillSwitchServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KillSwitchServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KillSwitchServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KillSwitchServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void NetworkChangeOnNetworkAvailabilityChanged() {
            base.Channel.NetworkChangeOnNetworkAvailabilityChanged();
        }
        
        public InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] GetNetworkAdapters() {
            return base.Channel.GetNetworkAdapters();
        }
        
        public bool DisableNetworkAdapter(InternetKillSwitchApplication.KillSwitch.NetworkAdapter o) {
            return base.Channel.DisableNetworkAdapter(o);
        }
        
        public bool EnableNetworkAdapter(InternetKillSwitchApplication.KillSwitch.NetworkAdapter o) {
            return base.Channel.EnableNetworkAdapter(o);
        }
        
        public bool TryGetNetworkAdapterName(out string name, InternetKillSwitchApplication.KillSwitch.NetworkAdapter o) {
            return base.Channel.TryGetNetworkAdapterName(out name, o);
        }
        
        public string GetIpAddress() {
            return base.Channel.GetIpAddress();
        }
        
        public void EnableAllLocal() {
            base.Channel.EnableAllLocal();
        }
        
        public void EnableAllVpn() {
            base.Channel.EnableAllVpn();
        }
        
        public void DisableAllLocal() {
            base.Channel.DisableAllLocal();
        }
        
        public void DisableAllVpn() {
            base.Channel.DisableAllVpn();
        }
        
        public void AddVpnAdapters(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] adapters) {
            base.Channel.AddVpnAdapters(adapters);
        }
        
        public void AddLocalAdapters(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] adapters) {
            base.Channel.AddLocalAdapters(adapters);
        }
        
        public void RemoveVpnAdapters(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] adapters) {
            base.Channel.RemoveVpnAdapters(adapters);
        }
        
        public void RemoveLocalAdapters(InternetKillSwitchApplication.KillSwitch.NetworkAdapter[] adapters) {
            base.Channel.RemoveLocalAdapters(adapters);
        }
    }
}
